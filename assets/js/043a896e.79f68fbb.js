"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[970],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(n),m=o,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8366:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(5443),o=n(3010),a=(n(9496),n(9613)),i=["components"],c={},s="K0s, the Kubernetes distribution for bare-metal",l={unversionedId:"main-concepts/k0s",id:"main-concepts/k0s",title:"K0s, the Kubernetes distribution for bare-metal",description:"Further information can be found on their website: k0sproject.io.",source:"@site/docs/main-concepts/01-k0s.md",sourceDirName:"main-concepts",slug:"/main-concepts/k0s",permalink:"/docs/main-concepts/k0s",draft:!1,editUrl:"https://github.com/SquareFactory/ClusterFactory-CE/tree/main/web/docs/main-concepts/01-k0s.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"docs",previous:{title:"6. xCAT Configuration",permalink:"/docs/getting-started/xcat-configuration"},next:{title:"MetalLB, the bare-metal Load Balancer",permalink:"/docs/main-concepts/core-network/metallb"}},u={},p=[],f={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"k0s-the-kubernetes-distribution-for-bare-metal"},"K0s, the Kubernetes distribution for bare-metal"),(0,a.kt)("p",null,"Further information can be found on their website: ",(0,a.kt)("a",{parentName:"p",href:"https://k0sproject.io"},"k0sproject.io"),"."),(0,a.kt)("p",null,"The reasons we are using k0s instead of kubeadm, k3s, ...:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It's ",(0,a.kt)("strong",{parentName:"li"},"light and customizable")," via a single YAML file, in a declarative way, therefore we can store the configuration of the whole cluster inside a git repository."),(0,a.kt)("li",{parentName:"ul"},"It allows ",(0,a.kt)("strong",{parentName:"li"},"HA, multi-node and single node deployment"),"."),(0,a.kt)("li",{parentName:"ul"},"It runs with a single binary, ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/k0sproject/k0s"},"k0s"),"."),(0,a.kt)("li",{parentName:"ul"},"It's open-source, including k0sctl. Meaning we could (and probably will) fork k0sctl."),(0,a.kt)("li",{parentName:"ul"},"It's a vanilla Kubernetes meaning it gets updated fast."),(0,a.kt)("li",{parentName:"ul"},"It allows ",(0,a.kt)("strong",{parentName:"li"},"easy upgrade, backup and restores"),".")),(0,a.kt)("p",null,"ClusterFactory aims to be an orchestrator for many various workloads, including bare-metal and cloud workloads. Maintainability, ease of use, and declarative configuration are the keys to good long-term development. And that's exactly what k0s brings us."))}m.isMDXComponent=!0}}]);