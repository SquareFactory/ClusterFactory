"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[9723],{9613:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,d=c["".concat(s,".").concat(k)]||c[k]||u[k]||l;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1234:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(665),r=n(151),l=(n(9496),n(9613)),i=["components"],o={},s="cfctl.yaml",p={unversionedId:"reference/cfctl.yaml",id:"reference/cfctl.yaml",title:"cfctl.yaml",description:"apiVersion: cfctl.clusterfactory.io/v1beta1",source:"@site/docs/reference/cfctl.yaml.md",sourceDirName:"reference",slug:"/reference/cfctl.yaml",permalink:"/docs/reference/cfctl.yaml",draft:!1,editUrl:"https://github.com/SquareFactory/ClusterFactory-CE/tree/main/web/docs/reference/cfctl.yaml.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"cfctl",permalink:"/docs/reference/cfctl"},next:{title:"Contributing",permalink:"/docs/see-also/contributing"}},m={},u=[{value:"Cluster",id:"cluster",level:2},{value:"ClusterMetadata",id:"clustermetadata",level:2},{value:"Spec",id:"spec",level:2},{value:"Host",id:"host",level:2},{value:"UploadFile",id:"uploadfile",level:2},{value:"SSH",id:"ssh",level:2},{value:"K0s",id:"k0s",level:2}],c={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cfctlyaml"},"cfctl.yaml"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"apiVersion: cfctl.clusterfactory.io/v1beta1")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: cfctl.clusterfactory.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k8s.example.com-cluster\nspec:\n  hosts:\n    - ssh:\n        address: 192.168.0.2\n        user: root\n        port: 22\n        keyPath: ~/.ssh/id_ed25519\n      role: controller+worker\n      noTaints: true\n      privateInterface: eno1\n      privateAddress: 192.168.0.2\n      installFlags:\n        - --debug\n        - --labels=\"topology.kubernetes.io/region=ch-sion,topology.kubernetes.io/zone=ch-sion-1\"\n        - --disable-components coredns\n      hooks:\n        apply:\n          before:\n            # Set SELinux Permissive\n            - sh -c 'if [ \"$(getenforce)\" != \"Permissive\" ] && [ \"$(getenforce)\" != \"Disabled\" ]; then sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config; fi'\n            - sh -c 'if [ \"$(getenforce)\" != \"Permissive\" ] && [ \"$(getenforce)\" != \"Disabled\" ]; then setenforce 0; fi'\n\n  k0s:\n    version: '1.23.8+k0s.0'\n    dynamicConfig: false\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: Cluster\n      metadata:\n        name: k8s.example.com\n      spec:\n        api:\n          k0sApiPort: 9443\n          port: 6443\n        installConfig:\n          users:\n            etcdUser: etcd\n            kineUser: kube-apiserver\n            konnectivityUser: konnectivity-server\n            kubeAPIserverUser: kube-apiserver\n            kubeSchedulerUser: kube-scheduler\n        konnectivity:\n          adminPort: 8133\n          agentPort: 8132\n        network:\n          calico:\n            mode: 'vxlan'\n            overlay: Always\n            mtu: 0\n            wireguard: false\n          kubeProxy:\n            disabled: false\n            mode: iptables\n          kuberouter:\n            autoMTU: true\n            mtu: 0\n            peerRouterASNs: ''\n            peerRouterIPs: ''\n          podCIDR: 10.244.0.0/16\n          provider: calico\n          serviceCIDR: 10.96.0.0/12\n        podSecurityPolicy:\n          defaultPolicy: 00-k0s-privileged\n        storage:\n          type: etcd\n        telemetry:\n          enabled: false\n        extensions:\n          helm:\n            repositories:\n              - name: traefik\n                url: https://helm.traefik.io/traefik\n              - name: bitnami\n                url: https://charts.bitnami.com/bitnami\n              - name: jetstack\n                url: https://charts.jetstack.io\n              - name: csi-driver-nfs\n                url: https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts\n            charts:\n              - name: metallb\n                chartname: bitnami/metallb\n                version: '3.0.10'\n                namespace: metallb\n                values: |\n                  configInline:\n                    peers:\n                      - peer-address: 192.168.0.1\n                        peer-asn: 65000\n                        my-asn: 65001\n                        source-address: 192.168.0.2\n                        node-selectors:\n                          - match-labels:\n                              kubernetes.io/hostname: mn1.example.com\n\n                    address-pools:\n                      - name: main-pool\n                        protocol: bgp\n                        addresses:\n                          - 192.168.1.100/32\n\n              - name: traefik\n                chartname: traefik/traefik\n                version: '10.24.0'\n                namespace: traefik\n                values: |\n                  deployment:\n                    kind: DaemonSet\n\n                  ingressClass:\n                    enabled: true\n                    isDefaultClass: true\n\n                  service:\n                    enabled: true\n                    annotations:\n                      metallb.universe.tf/address-pool: main-pool\n                      metallb.universe.tf/allow-shared-ip: traefik-lb-key\n                    spec:\n                      externalTrafficPolicy: Cluster\n                      loadBalancerIP: 192.168.1.100\n\n                  providers:\n                    kubernetesCRD:\n                      enabled: true\n                      allowCrossNamespace: true\n                      allowExternalNameServices: true\n                      namespaces: []\n                    kubernetesIngress:\n                      enabled: true\n                      allowExternalNameServices: true\n                      namespaces: []\n                      ingressClass: traefik\n                      publishedService:\n                        enabled: true\n\n                  globalArguments:\n                    - '--global.checknewversion'\n                    - '--api.dashboard=true'\n\n                  additionalArguments:\n                    - '--entryPoints.websecure.proxyProtocol.insecure'\n                    - '--entryPoints.websecure.forwardedHeaders.insecure'\n\n                  ingressRoute:\n                    dashboard:\n                      enabled: false\n\n                  ports:\n                    traefik:\n                      port: 9000\n                      expose: false\n                      exposedPort: 9000\n                      protocol: TCP\n                    web:\n                      port: 80\n                      expose: true\n                      exposedPort: 80\n                      protocol: TCP\n                    websecure:\n                      port: 443\n                      expose: true\n                      exposedPort: 443\n                      protocol: TCP\n                      # NOTE: use cert-manager.\n                      tls:\n                        enabled: false\n                    metrics:\n                      port: 9100\n                      expose: false\n                      exposedPort: 9100\n                      protocol: TCP\n\n                  securityContext:\n                    capabilities:\n                      drop: [ALL]\n                      add: [NET_BIND_SERVICE]\n                    readOnlyRootFilesystem: true\n                    runAsGroup: 0\n                    runAsNonRoot: false\n                    runAsUser: 0\n\n                  podSecurityContext:\n                    fsGroup: 65532\n\n              - name: cert-manager\n                chartname: jetstack/cert-manager\n                version: 'v1.9.0-beta.1'\n                namespace: cert-manager\n                values: |\n                  installCRDs: true\n\n              - name: csi-driver-nfs\n                chartname: csi-driver-nfs/csi-driver-nfs\n                version: 'v4.1.0'\n                namespace: csi-driver-nfs\n                values: |\n                  driver:\n                    mountPermissions: 0775\n                  kubeletDir: /var/lib/k0s/kubelet\n"))),(0,l.kt)("h2",{id:"cluster"},"Cluster"),(0,l.kt)("p",null,"Cluster is the configuration for a k0s cluster. It configures k0s on the listed hosts."),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"apiVersion"),": cfctl.clusterfactory.io/v1beta1"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"kind"),": Cluster"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"metadata"),": (",(0,l.kt)("a",{parentName:"li",href:"#clustermetadata"},"ClusterMetadata"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"spec")," (",(0,l.kt)("a",{parentName:"li",href:"#spec"},"Spec"),")")),(0,l.kt)("h2",{id:"clustermetadata"},"ClusterMetadata"),(0,l.kt)("p",null,"ClusterMetadata is the metadata of the cluster."),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"name"),": (string)"),(0,l.kt)("p",{parentName:"li"},"Name of the cluster configuration."))),(0,l.kt)("h2",{id:"spec"},"Spec"),(0,l.kt)("p",null,"Spec is a description of a cluster configuration."),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hosts"),": (","[][host]","(#host)), required"),(0,l.kt)("p",{parentName:"li"},"List of hosts belonging to the cluster. There must be at least on host in a Cluster. Host requirements:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Currently only linux targets are supported"),(0,l.kt)("li",{parentName:"ul"},"The user must either be root or have passwordless ",(0,l.kt)("inlineCode",{parentName:"li"},"sudo")," access."),(0,l.kt)("li",{parentName:"ul"},"The host must fulfill the k0s system requirements"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"k0s"),": (",(0,l.kt)("a",{parentName:"p",href:"#k0s"},"K0s"),"), optional"),(0,l.kt)("p",{parentName:"li"},"K0s configuration for the hosts."))),(0,l.kt)("h2",{id:"host"},"Host"),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"role"),": (string)"),(0,l.kt)("p",{parentName:"li"},"One of:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"controller")," - a controller host"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"controller+worker")," - a controller host that will also run workloads"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"single")," - a single-node cluster host, the configuration can only contain one host"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"worker")," - a worker host"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"privateInterface"),": (string), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"}," ")),(0,l.kt)("p",{parentName:"li"},"Override private network interface selected by host fact gathering.\nUseful in case fact gathering picks the wrong private network interface."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- role: worker\n  os: debian\n  privateInterface: eth1\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"privateAddress"),": (string), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"}," ")),(0,l.kt)("p",{parentName:"li"},"Override private IP address selected by host fact gathering.\nUseful in case fact gathering picks the wrong IPAddress."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- role: worker\n  os: debian\n  privateAddress: 10.0.0.2\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"environment"),": (map","[","string","]","string), optional"),(0,l.kt)("p",{parentName:"li"},"List of key-value pairs to set to the target host's environment variables."),(0,l.kt)("p",{parentName:"li"},"Example:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"environment:\n  HTTP_PROXY: 10.0.0.1:443\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"uploadBinary"),": (boolean), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("p",{parentName:"li"},"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the k0s binaries for target host will be downloaded and cached on the local host and uploaded to the target.\nWhen ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", the k0s binary downloading is performed on the target host itself")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"k0sBinaryPath"),": (string), optional"),(0,l.kt)("p",{parentName:"li"},"A path to a file on the local host that contains a k0s binary to be uploaded to the host. Can be used to test drive a custom development build of k0s.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"installFlags"),": (","[","]","string), optional"),(0,l.kt)("p",{parentName:"li"},"Extra flags passed to the ",(0,l.kt)("inlineCode",{parentName:"p"},"k0s install")," command on the target host. See ",(0,l.kt)("inlineCode",{parentName:"p"},"k0s install --help")," for a list of options.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"files"),": (","[","]",(0,l.kt)("a",{parentName:"p",href:"#uploadfile"},"Uploadfile"),"), optional"),(0,l.kt)("p",{parentName:"li"},"List of files to be uploaded to the host."),(0,l.kt)("p",{parentName:"li"},"Example:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: image-bundle\n  src: airgap-images.tgz\n  dstDir: /var/lib/k0s/images/\n  perm: 0600\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),': name of the file "bundle", used only for logging purposes (optional)'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"src"),": File path, an URL or ",(0,l.kt)("a",{parentName:"li",href:"https://golang.org/pkg/path/filepath/#Match"},"Glob pattern")," to match files to be uploaded. URL sources will be directly downloaded using the target host (required)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dstDir"),": Destination directory for the file(s). ",(0,l.kt)("inlineCode",{parentName:"li"},"k0sctl")," will create full directory structure if it does not already exist on the host (default: user home)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dst"),": Destination filename for the file. Only usable for single file uploads (default: basename of file)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"perm"),": File permission mode for uploaded file(s) (default: same as local)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dirPerm"),": Directory permission mode for created directories (default: 0755)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"user"),": User name of file/directory owner, must exist on the host (optional)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"group"),": Group name of file/directory owner, must exist on the host (optional)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"os"),": (string), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"}," ")),(0,l.kt)("p",{parentName:"li"},"Override OS distribution auto-detection. By default ",(0,l.kt)("inlineCode",{parentName:"p"},"k0sctl")," detects the OS by reading ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/os-release")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/lib/os-release")," files. In case your system is based on e.g. Debian but the OS release info has something else configured you can override ",(0,l.kt)("inlineCode",{parentName:"p"},"k0sctl")," to use Debian based functionality for the node with:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- role: worker\n  os: debian\n  ssh:\n    address: 10.0.0.2\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hostname"),": (string), optional"),(0,l.kt)("p",{parentName:"li"},"Override host's hostname. When not set, the hostname reported by the operating system is used.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"noTaints"),": (boolean), optional, default: ` false"),(0,l.kt)("p",{parentName:"li"},"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," and used in conjuction with the ",(0,l.kt)("inlineCode",{parentName:"p"},"controller+worker")," role, the default taints are disabled making regular workloads schedulable on the node. By default, k0s sets a node-role.kubernetes.io/master:NoSchedule taint on controller+worker nodes and only workloads with toleration for it will be scheduled.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hooks"),": (Hooks, which is a map","[string]","map","[string][]","string, such as hooks",'["apply"]["before"]'," = ",'["ls -al", "rm foo.txt"]',"), optional"),(0,l.kt)("p",{parentName:"li"},"Run a set of commands on the remote host during k0sctl operations."),(0,l.kt)("p",{parentName:"li"},"Example:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'hooks:\n  apply:\n    before:\n      - date >> k0sctl-apply.log\n    after:\n      - echo "apply success" >> k0sctl-apply.log\n')),(0,l.kt)("p",{parentName:"li"},'The currently available "hook points" are:'),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"apply"),": Runs during ",(0,l.kt)("inlineCode",{parentName:"li"},"k0sctl apply"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"before"),": Runs after configuration and host validation, right before configuring k0s on the host"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"after"),": Runs before disconnecting from the host after a successful apply operation"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"backup"),": Runs during ",(0,l.kt)("inlineCode",{parentName:"li"},"k0s backup"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"before"),": Runs before k0sctl runs the ",(0,l.kt)("inlineCode",{parentName:"li"},"k0s backup")," command"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"after"),": Runs before disconnecting from the host after successfully taking a backup"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reset"),": Runs during ",(0,l.kt)("inlineCode",{parentName:"li"},"k0sctl reset"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"before"),": Runs after gathering information about the cluster, right before starting to remove the k0s installation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"after"),": Runs before disconnecting from the host after a successful reset operation"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"ssh"),": (",(0,l.kt)("a",{parentName:"p",href:"#ssh"},"SSH"),"), optional"),(0,l.kt)("p",{parentName:"li"},"SSH connection options."),(0,l.kt)("p",{parentName:"li"},"Example:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  hosts:\n    - role: controller\n      ssh:\n        address: 10.0.0.2\n        user: ubuntu\n        keyPath: ~/.ssh/id_rsa\n")),(0,l.kt)("p",{parentName:"li"},"It's also possible to tunnel connections through a bastion host. The bastion configuration has all the same fields as any SSH connection:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  hosts:\n    - role: controller\n      ssh:\n        address: 10.0.0.2\n        user: ubuntu\n        keyPath: ~/.ssh/id_rsa\n        bastion:\n          address: 10.0.0.1\n          user: root\n          keyPath: ~/.ssh/id_rsa2\n")),(0,l.kt)("p",{parentName:"li"},"SSH agent and auth forwarding are also supported, a host without a keyfile:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  hosts:\n    - role: controller\n      ssh:\n        address: 10.0.0.2\n        user: ubuntu\n")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ ssh-add ~/.ssh/aws.pem\n$ ssh -A user@jumphost\nuser@jumphost ~ $ k0sctl apply\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"localhost"),": (Localhost), optional"),(0,l.kt)("p",{parentName:"li"},"Localhost connection options. Can be used to use the local host running k0sctl as a node in the cluster."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"enabled")," (boolean), optional, default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",{parentName:"li"},"This must be set ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to enable the localhost connection."))),(0,l.kt)("h2",{id:"uploadfile"},"UploadFile"),(0,l.kt)("p",null,"UploadFile describes a file to be uploaded for the host"),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"name"),": (string), optional"),(0,l.kt)("p",{parentName:"li"},'Name of the file "bundle", used only for logging purposes.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"src"),": (string)"),(0,l.kt)("p",{parentName:"li"},"File path, an URL or ",(0,l.kt)("a",{parentName:"p",href:"https://golang.org/pkg/path/filepath/#Match"},"Glob pattern")," to match files to be uploaded. URL sources will be directly\ndownloaded using the target host.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"dstDir"),": (string), default: user home"),(0,l.kt)("p",{parentName:"li"},"Destination directory for the file(s). ",(0,l.kt)("inlineCode",{parentName:"p"},"k0sctl")," will create full directory structure if it does not already exist on the host.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"dst"),": (string), default: basename of file"),(0,l.kt)("p",{parentName:"li"},"Destination filename for the file. Only usable for single file uploads.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"perm"),": (octal string), default: same as local"),(0,l.kt)("p",{parentName:"li"},"File permission mode for uploaded file(s).")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"dirPerm"),": (octal string), default: ",(0,l.kt)("inlineCode",{parentName:"p"},"0755")),(0,l.kt)("p",{parentName:"li"},"Directory permission mode for created directories.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"user"),": (string), optional"),(0,l.kt)("p",{parentName:"li"},"User name of file/directory owner, must exist on the host.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"group"),": (string)"),(0,l.kt)("p",{parentName:"li"},"Group name of file/directory owner, must exist on the host."))),(0,l.kt)("h2",{id:"ssh"},"SSH"),(0,l.kt)("p",null,"SSH describe an SSH connection."),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"address"),": (string)"),(0,l.kt)("p",{parentName:"li"},"Address of the the remote SSH Host.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"user"),": (string), default: ",(0,l.kt)("inlineCode",{parentName:"p"},"root")),(0,l.kt)("p",{parentName:"li"},"User used to authenticate during the SSH connection.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"port"),": (integer), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"},"22")),(0,l.kt)("p",{parentName:"li"},"Port opened on the host which is accepting SSH connection.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"keyPath"),": (string), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa")),(0,l.kt)("p",{parentName:"li"},"Path of the SSH Key used to authenticate during the SSH connection.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hostKey"),": (string), optional"),(0,l.kt)("p",{parentName:"li"},"Key of the remote of for SSH host key verification.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"bastion"),": (",(0,l.kt)("a",{parentName:"p",href:"#ssh"},"SSH"),"), optional"),(0,l.kt)("p",{parentName:"li"},"Bastion is used to configured SSH connection over an SSH bastion."))),(0,l.kt)("h2",{id:"k0s"},"K0s"),(0,l.kt)("p",null,"K0s holds configuration for bootstraping a k0s cluster."),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"version"),": (string), optional, default: auto-discovery"),(0,l.kt)("p",{parentName:"li"},"The version of k0s to deploy. When left out, k0sctl will default to using the latest released version of k0s or the version already running on the cluster.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"dynamicConfig"),": (boolean), optional, default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any controller node has ",(0,l.kt)("inlineCode",{parentName:"li"},"--enable-dynamic-config")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"installFlags")),(0,l.kt)("li",{parentName:"ul"},"Any existing controller node has ",(0,l.kt)("inlineCode",{parentName:"li"},"--enable-dynamic-config")," in run arguments (",(0,l.kt)("inlineCode",{parentName:"li"},"k0s status -o json"),")")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Note:")," When running k0s in dynamic config mode, k0sctl will ONLY configure the cluster-wide configuration during the first time initialization, after that the configuration has to be managed via ",(0,l.kt)("inlineCode",{parentName:"p"},"k0s config edit")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"k0sctl config edit"),". The node specific configuration will be updated on each apply."),(0,l.kt)("p",{parentName:"li"},"See also:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.k0sproject.io/main/dynamic-configuration/"},"k0s Dynamic Configuration")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"config"),": (",(0,l.kt)("a",{parentName:"p",href:"https://docs.k0sproject.io/head/configuration/"},"K0sConfig"),"), optional, default: auto-generated"),(0,l.kt)("p",{parentName:"li"},"Embedded k0s cluster configuration. See ",(0,l.kt)("a",{parentName:"p",href:"https://docs.k0sproject.io/main/configuration/"},"k0s configuration documentation")," for details."),(0,l.kt)("p",{parentName:"li"},"When left out, the output of ",(0,l.kt)("inlineCode",{parentName:"p"},"k0s config create")," will be used."))))}k.isMDXComponent=!0}}]);