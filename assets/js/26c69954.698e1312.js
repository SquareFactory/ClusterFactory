"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[9205],{6096:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(1527),s=r(8422);const i={},a="Setting up the Git repository for GitOps",o={id:"guides/setting-up-repository",title:"Setting up the Git repository for GitOps",description:"To enable GitOps and be able to follow the updates of the ClusterFactory repository, you should fork the ClusterFactory repository or create a private copy, so you could use Argo CD on your own repository.",source:"@site/docs/guides/01-setting-up-repository.md",sourceDirName:"guides",slug:"/guides/setting-up-repository",permalink:"/docs/guides/setting-up-repository",draft:!1,unlisted:!1,editUrl:"https://github.com/deepsquare-io/ClusterFactory/tree/main/web/docs/guides/01-setting-up-repository.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"docs",previous:{title:"Installing the utilities",permalink:"/docs/guides/installing-the-utilities"},next:{title:"Exposing your Kubernetes Workload",permalink:"/docs/guides/exposing-k8s-workloads"}},l={},c=[{value:"Setting up the Git repository",id:"setting-up-the-git-repository",level:2},{value:"1. Fork the repository",id:"1-fork-the-repository",level:3},{value:"Method 1: Create a public fork",id:"method-1-create-a-public-fork",level:4},{value:"Method 2: Create a private fork",id:"method-2-create-a-private-fork",level:4},{value:"2. Setup the upstream remote for git",id:"2-setup-the-upstream-remote-for-git",level:3},{value:"3. Checkout to a stable version and create a new branch",id:"3-checkout-to-a-stable-version-and-create-a-new-branch",level:3},{value:"4. Rename the examples and commit",id:"4-rename-the-examples-and-commit",level:3},{value:"Use <code>git fetch</code> and <code>git merge</code> to merge the upstream main into the local branch",id:"use-git-fetch-and-git-merge-to-merge-the-upstream-main-into-the-local-branch",level:2},{value:"Use Argo CD to pull, synchronize and deploy the manifests",id:"use-argo-cd-to-pull-synchronize-and-deploy-the-manifests",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"setting-up-the-git-repository-for-gitops",children:"Setting up the Git repository for GitOps"}),"\n",(0,n.jsxs)(t.p,{children:["To enable GitOps and be able to follow the updates of the ClusterFactory repository, you should ",(0,n.jsx)(t.a,{href:"https://docs.github.com/en/get-started/quickstart/fork-a-repo",children:"fork"})," the ",(0,n.jsx)(t.a,{href:"https://github.com/deepsquare-io/ClusterFactory",children:"ClusterFactory repository"})," or create a private copy, so you could use Argo CD on your own repository."]}),"\n",(0,n.jsx)(t.h2,{id:"setting-up-the-git-repository",children:"Setting up the Git repository"}),"\n",(0,n.jsx)(t.h3,{id:"1-fork-the-repository",children:"1. Fork the repository"}),"\n",(0,n.jsx)(t.h4,{id:"method-1-create-a-public-fork",children:"Method 1: Create a public fork"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:'Use the "Fork" button on Github and create the fork on your favorite account.'}),"\n"]}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Fork button",src:r(8196).Z+"",width:"1724",height:"240"})})}),"\n",(0,n.jsxs)(t.ol,{start:"2",children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["After setting up the fork, ",(0,n.jsx)(t.code,{children:"git clone"})," the fork. Example:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/"',children:"# SSH\ngit clone git@github.com:<your account>/ClusterFactory.git\n"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"method-2-create-a-private-fork",children:"Method 2: Create a private fork"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Create a bare clone of the repository."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/"',children:"git clone --bare https://github.com/deepsquare-io/ClusterFactory.git\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Create ",(0,n.jsx)(t.a,{href:"https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository",children:"a new private repository on your favorite Git hosting website"})," and name it ",(0,n.jsx)(t.code,{children:"ClusterFactory"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Mirror-push your bare clone to your new ",(0,n.jsx)(t.code,{children:"ClusterFactory"})," repository."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/"',children:"cd ClusterFactory.git\n# SSH\ngit push --mirror git@github.com:<your account>/ClusterFactory.git\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Remove the bare clone."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory.git"',children:"cd ..\nrm -rf ./ClusterFactory.git\n\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["You can now clone your ",(0,n.jsx)(t.code,{children:"ClusterFactory"})," repository on your machine."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/"',children:"# SSH\ngit clone git@github.com:<your account>/ClusterFactory.git\n"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"2-setup-the-upstream-remote-for-git",children:"2. Setup the upstream remote for git"}),"\n",(0,n.jsxs)(t.p,{children:["Git is capable of managing multiple remote repositories. By default, ",(0,n.jsx)(t.code,{children:"origin"})," is linked to the ",(0,n.jsx)(t.code,{children:"<your account>/ClusterFactory"})," repository. To be able to fetch updates from the upstream ",(0,n.jsx)(t.code,{children:"deepsquare-io/ClusterFactory"})," repository, we need to add a remote repository that we call ",(0,n.jsx)(t.code,{children:"upstream"}),"."]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Add the upstream and disable push on the remote ",(0,n.jsx)(t.code,{children:"upstream"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git remote add upstream https://github.com/deepsquare-io/ClusterFactory.git\ngit remote set-url --push upstream DISABLE\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["You can list all your remotes with ",(0,n.jsx)(t.code,{children:"git remote -v"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git remote -v\n# origin\tgit@github.com:<your account>/ClusterFactory.git (fetch)\n# origin\tgit@github.com:<your account>/ClusterFactory.git (push)\n# upstream\thttps://github.com/deepsquare-io/ClusterFactory.git (fetch)\n# upstream\tDISABLE (push)\n"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"3-checkout-to-a-stable-version-and-create-a-new-branch",children:"3. Checkout to a stable version and create a new branch"}),"\n",(0,n.jsx)(t.p,{children:"You can checkout to a stable version:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git checkout -b configs v0.7.0\n# You can delete the local main branch\ngit branch -D main\n"})}),"\n",(0,n.jsx)(t.h3,{id:"4-rename-the-examples-and-commit",children:"4. Rename the examples and commit"}),"\n",(0,n.jsxs)(t.p,{children:["Copy ",(0,n.jsx)(t.code,{children:"argo.example"}),", ",(0,n.jsx)(t.code,{children:"core.example"}),", ",(0,n.jsx)(t.code,{children:"cfctl.yaml.example"}),", and remove the ",(0,n.jsx)(t.code,{children:".example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"cp -R argo.example/ argo/\ncp -R core.example/ core/\ncp cfctl.yaml.example cfctl.yaml\n"})}),"\n",(0,n.jsx)(t.p,{children:"You can track these files on Git:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:'git add .\ngit commit -m "Initialized my config"\ngit push -u origin configs\n# You can also delete the remote main branch\n'})}),"\n",(0,n.jsxs)(t.h2,{id:"use-git-fetch-and-git-merge-to-merge-the-upstream-main-into-the-local-branch",children:["Use ",(0,n.jsx)(t.code,{children:"git fetch"})," and ",(0,n.jsx)(t.code,{children:"git merge"})," to merge the upstream main into the local branch"]}),"\n",(0,n.jsx)(t.p,{children:"Because ClusterFactory will be updated regularly, you can fetch the updates with git fetch:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git fetch --tags upstream\n"})}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"git-fetch",src:r(3111).Z+"",width:"1046",height:"358"})})}),"\n",(0,n.jsx)(t.p,{children:"To merge the upstream changes, either rebase or create a merge commit."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git merge v0.8.0\n"})}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"git-merge",src:r(4249).Z+"",width:"1234",height:"417"})})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git push\n"})}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"git-push",src:r(9088).Z+"",width:"1212",height:"406"})})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:"If you wish to follow the upstream main branch:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="user@local:/ClusterFactory"',children:"git merge upstream/main\ngit push\n"})}),"\n",(0,n.jsx)(t.p,{children:"If everything goes well, your git graph should always look like this:"}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"git-graph-example",src:r(7563).Z+"",width:"633",height:"314"})})}),"\n",(0,n.jsx)(t.h2,{id:"use-argo-cd-to-pull-synchronize-and-deploy-the-manifests",children:"Use Argo CD to pull, synchronize and deploy the manifests"}),"\n",(0,n.jsx)(t.p,{children:"If you want to deploy your applications, you should write your manifests and commit these files to your repository, like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-text",children:"./\n\u251c\u2500\u2500 argo/\n\u251c\u2500\u2500 bin/\n\u251c\u2500\u2500 core/\n\u251c\u2500\u2500 helm/\n\u2502   \u251c\u2500\u2500 csi-driver-cvmfs/\n\u2502   \u251c\u2500\u2500 cvmfs-server/\n\u2502   \u251c\u2500\u2500 cvmfs-service/\n\u2502   \u251c\u2500\u2500 ipmi-exporter/\n\u2502   \u251c\u2500\u2500 my-helm-application/  <----- HERE if it's a helm application\n\u2502   \u2502   \u251c\u2500\u2500 templates/\n\u2502   \u2502   \u251c\u2500\u2500 Chart.yaml\n\u2502   \u2502   \u2514\u2500\u2500 values.yaml\n\u2502   \u251c\u2500\u2500 openldap/\n\u2502   \u251c\u2500\u2500 slurm-cluster/\n\u2502   \u2514\u2500\u2500 grendel/\n\u251c\u2500\u2500 manifests/                <----- Or HERE if it's a kustomized/vanilla Kubernetes application\n\u2502   \u2514\u2500\u2500 my-application/       <-----\n\u2502       \u2514\u2500\u2500 statefulset.yaml  <-----\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,n.jsx)(t.p,{children:"Argo CD is able to retrieve your repository from your Git hosting server, synchronize changes and deploy your Kubernetes manifests."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Create a local secret containing a SSH deploy key and the git url:"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'title="argo/default/secrets/my-repository-secret.yaml.local"',children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: my-repository-secret\n  namespace: argocd\n  labels:\n    argocd.argoproj.io/secret-type: repository\ntype: Opaque\nstringData:\n  sshPrivateKey: |\n    -----BEGIN RSA PRIVATE KEY-----\n    -----END RSA PRIVATE KEY-----\n  type: git\n  url: git@github.com:<your account>/<your repo>.git\n"})}),"\n",(0,n.jsxs)(t.ol,{start:"2",children:["\n",(0,n.jsx)(t.li,{children:"Seal it and apply it:"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"cfctl kubeseal\nkubectl apply -f argo/default/secrets/my-repository-sealed-secret.yaml\n"})}),"\n",(0,n.jsxs)(t.ol,{start:"3",children:["\n",(0,n.jsx)(t.li,{children:"Configure an Argo CD Application:"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'title="argo/default/apps/my-application.yaml"',children:'apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: my-application\n  namespace: argocd\n  finalizers:\n    - resources-finalizer.argocd.argoproj.io\nspec:\n  project: default\n  source:\n    repoURL: git@github.com:<your account>/<your repo>.git\n    # You should use your branch too.\n    targetRevision: HEAD\n    path: manifests/my-application\n    directory:\n      recurse: true\n\n  destination:\n    server: \'https://kubernetes.default.svc\'\n    namespace: default\n\n  syncPolicy:\n    automated:\n      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).\n      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).\n      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).\n    syncOptions: []\n    retry:\n      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0\n      backoff:\n        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")\n        factor: 2 # a factor to multiply the base duration after each failed retry\n        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy\n'})}),"\n",(0,n.jsxs)(t.ol,{start:"4",children:["\n",(0,n.jsx)(t.li,{children:"And apply it:"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"kubectl apply -f argo/default/apps/my-application.yaml\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Argo CD will deploy and synchronize automatically by following the HEAD commit. You can also specify the branch instead of ",(0,n.jsx)(t.code,{children:"HEAD"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8196:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/fork_button-0eaa0bb958f213c929f690b73fa13c2e.png"},3111:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/image-20220624193812004-950c566d63078e19f0c95f8e387e6609.png"},4249:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/image-20220624194957531-dd9e755a4799530a9c7ac66eac7b636c.png"},9088:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/image-20220624195047988-d41b28d875b7257a18fdf37cf28359ea.png"},7563:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/image-20220624204605963-3ec11b6a06787bd93c16eedc63ae956a.png"},8422:(e,t,r)=>{r.d(t,{Z:()=>o,a:()=>a});var n=r(959);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);