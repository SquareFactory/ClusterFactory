"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[521],{9613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7259:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(2848),r=n(9213),o=(n(9496),n(9613)),i=["components"],s={},l="Configure xCAT to provision the nodes",c={unversionedId:"guides/provisioning/configure-xcat",id:"guides/provisioning/configure-xcat",title:"Configure xCAT to provision the nodes",description:"In the next version of ClusterFactory, xCAT will be a Kubernetes operator.",source:"@site/docs/guides/02-provisioning/03-configure-xcat.md",sourceDirName:"guides/02-provisioning",slug:"/guides/provisioning/configure-xcat",permalink:"/docs/guides/provisioning/configure-xcat",draft:!1,editUrl:"https://github.com/SquareFactory/cluster-factory-ce/tree/feat/docs/web/docs/guides/02-provisioning/03-configure-xcat.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docs",previous:{title:"Build an OS Image with Packer",permalink:"/docs/guides/provisioning/packer-build"},next:{title:"GitOps with xCAT",permalink:"/docs/guides/provisioning/gitops-with-xcat"}},p={},u=[{value:"Network Configuration",id:"network-configuration",level:2},{value:"OS Image configuration",id:"os-image-configuration",level:2},{value:"Node configuration",id:"node-configuration",level:2},{value:"Deploy",id:"deploy",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configure-xcat-to-provision-the-nodes"},"Configure xCAT to provision the nodes"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In the next version of ClusterFactory, xCAT will be a Kubernetes operator."),(0,o.kt)("p",{parentName:"div"},"This means that the stanza file for the definition of the cluster can be written in YAML, and there will be no need to SSH to xCAT."))),(0,o.kt)("h2",{id:"network-configuration"},"Network Configuration"),(0,o.kt)("p",null,"The name of the object is precise. You can SSH to xCAT and type\n",(0,o.kt)("inlineCode",{parentName:"p"},"lsdef -t network")," to look for the name of the network. Otherwise, the name of\nthe network look like this ",(0,o.kt)("inlineCode",{parentName:"p"},"10_10_2_0-255_255_255_0"),", which is the one configured with Multus CNI."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="network.stanza"',title:'"network.stanza"'},"10_10_2_0-255_255_255_0:\n    objtype=network\n    domain=my.home\n    gateway=10.10.2.1\n    mask=255.255.255.0\n    mgtifname=ens18\n    mtu=1500\n    nameservers=10.10.4.100\n    net=10.10.2.0\n    tftpserver=<xcatmaster>\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Don't replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<xcatmaster>"),"."))),(0,o.kt)("p",null,"Edit the file accordingly."),(0,o.kt)("p",null,"To apply the stanza:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"cat network.stanza | mkdef -z\n")),(0,o.kt)("p",null,"More details ",(0,o.kt)("a",{parentName:"p",href:"https://xcat-docs.readthedocs.io/en/latest/guides/admin-guides/references/man5/networks.5.html"},"here"),"."),(0,o.kt)("p",null,"For Infiniband, follow ",(0,o.kt)("a",{parentName:"p",href:"https://xcat-docs.readthedocs.io/en/stable/advanced/networks/infiniband/network_configuration.html"},"this guide"),"."),(0,o.kt)("h2",{id:"os-image-configuration"},"OS Image configuration"),(0,o.kt)("p",null,"Use Packer to build OS images."),(0,o.kt)("p",null,"You can build the SquareFactory OS image using the recipes stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"packer-recipes"),". Basically, it runs RedHat Kickstart and install all the software needed at SquareFactory."),(0,o.kt)("p",null,"After building the image, you should copy the root file-system via ",(0,o.kt)("inlineCode",{parentName:"p"},"rsync")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"scp"),". Follow ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/provisioning/packer-build"},"this guide for more information"),"."),(0,o.kt)("p",null,"Create the stanza:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="osimage.stanza"',title:'"osimage.stanza"'},"rocky8.4-x86_64-netboot-compute:\n    objtype=osimage\n    exlist=/install/rocky8.4/x86_64/Packages/compute.rocky8.x86_64.exlist\n    imagetype=linux\n    osarch=x86_64\n    osname=Linux\n    osvers=rocky8.4\n    permission=755\n    profile=compute\n    provmethod=netboot\n    rootimgdir=/install/netboot/rocky8.4/x86_64/compute\n")),(0,o.kt)("p",null,"Edit accordingly, and apply it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"cat osimage.stanza | mkdef -z\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/install/netboot/rocky8.4/x86_64/compute/rootimg")," should contains the root file-system."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/install/rocky8.4/x86_64/Packages/compute.rocky8.x86_64.exlist")," contains a list files/directories that are trimmed before packing the image."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="/install/rocky8.4/x86_64/Packages/compute.rocky8.x86_64.exlist"',title:'"/install/rocky8.4/x86_64/Packages/compute.rocky8.x86_64.exlist"'},"./boot*\n./usr/include*\n./usr/lib/locale*\n./usr/lib64/perl5/Encode/CN*\n./usr/lib64/perl5/Encode/JP*\n./usr/lib64/perl5/Encode/TW*\n./usr/lib64/perl5/Encode/KR*\n./lib/kbd/keymaps/i386*\n./lib/kbd/keymaps/mac*\n./lib/kdb/keymaps/include*\n./usr/local/include*\n./usr/local/share/man*\n./usr/share/man*\n./usr/share/cracklib*\n./usr/share/doc*\n./usr/share/gnome*\n./usr/share/i18n*\n+./usr/share/i18n/en_US*\n./usr/share/info*\n./usr/share/locale/*\n+./usr/share/locale/en_US*\n+./usr/share/locale/C*\n+./usr/share/locale/locale.alias\n+./usr/lib/locale/locale-archive\n+./usr/lib/locale/en*\n./usr/share/man*\n./usr/share/omf*\n./usr/share/vim/site/doc*\n./usr/share/vim/vim74/doc*\n./usr/share/zoneinfo*\n./var/cache/man*\n./var/lib/yum*\n./tmp*\n")),(0,o.kt)("p",null,"Generate the kernel and initrd for the netboot:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"geninitrd rocky8.4-x86_64-netboot-compute\n")),(0,o.kt)("p",null,"To pack the image as squashfs, call:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"packimage -m squashfs -c pigz rocky8.4-x86_64-netboot-compute\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Even if no logs are shown, the process is running. You should until the end of the command."),(0,o.kt)("p",{parentName:"div"},"You must allocate enough ",(0,o.kt)("inlineCode",{parentName:"p"},"tmp")," for the process to work. Inside the xCAT Helm ",(0,o.kt)("inlineCode",{parentName:"p"},"values"),", you can use:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"tmp:\n  medium: 'Memory'\n  size: 50Gi\n")),(0,o.kt)("p",{parentName:"div"},"If you wish to build inside the RAM."))),(0,o.kt)("h2",{id:"node-configuration"},"Node configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="cn1.stanza"',title:'"cn1.stanza"'},"cn1:\n    objtype=node\n    addkcmdline=modprobe.blacklist=nouveau crashkernel=256M\n    arch=x86_64\n    bmc=10.10.3.51\n    bmcpassword=password\n    bmcusername=admin\n    cons=ipmi\n    consoleenabled=1\n    currstate=netboot rocky8.4-x86_64-compute\n    groups=compute,all\n    ip=10.10.2.51\n    mac=18:c0:4d:b7:88:5f\n    mgt=ipmi\n    netboot=xnba\n    os=rocky8.4\n    profile=compute\n    provmethod=rocky8.4-x86_64-netboot-compute\n    serialport=1\n    serialspeed=115200\n")),(0,o.kt)("p",null,"Edit accordingly and apply the stanza:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"cat cn1.stanza | mkdef -z\n")),(0,o.kt)("p",null,"More details ",(0,o.kt)("a",{parentName:"p",href:"https://xcat-docs.readthedocs.io/en/stable/guides/admin-guides/references/man7/node.7.html"},"here"),"."),(0,o.kt)("h2",{id:"deploy"},"Deploy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ssh root@xcat"',title:'"ssh','root@xcat"':!0},"rpower cn1 on # or rpower cn1 reset\n")))}d.isMDXComponent=!0}}]);