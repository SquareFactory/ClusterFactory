"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[6255],{7942:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(959);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9040:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(665),o=(r(959),r(7942));const a={},i="Overview",s={unversionedId:"getting-started/overview",id:"getting-started/overview",title:"Overview",description:"The purpose of this guide is to achieve the following objectives:",source:"@site/docs/getting-started/00-overview.md",sourceDirName:"getting-started",slug:"/getting-started/overview",permalink:"/docs/getting-started/overview",draft:!1,editUrl:"https://github.com/deepsquare-io/ClusterFactory/tree/main/web/docs/getting-started/00-overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"docs",previous:{title:"Welcome to the ClusterFactory Documentation",permalink:"/docs/overview/welcome"},next:{title:"1. Requirements and recommendations",permalink:"/docs/getting-started/requirements-recommendations"}},l={},c=[{value:"Architecture",id:"architecture",level:2}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The purpose of this guide is to achieve the following objectives:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the Kubernetes Cluster along with its essential components such as:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"CoreDNS, which provides domain name resolution services"),(0,o.kt)("li",{parentName:"ul"},"MetalLB, which exposes Kubernetes Services to the local network"),(0,o.kt)("li",{parentName:"ul"},"Traefik, which offers HTTP/TCP/UDP L7 routing and load balancing functionality"),(0,o.kt)("li",{parentName:"ul"},"Multus, which uses IPVLAN to expose Grendel"),(0,o.kt)("li",{parentName:"ul"},"cert-manager and sealed-secrets, which provide secrets management capabilities"))),(0,o.kt)("li",{parentName:"ul"},"Deploy ArgoCD for implementing GitOps practices."),(0,o.kt)("li",{parentName:"ul"},"Utilize ArgoCD to deploy Grendel, which is a bare-metal provisioning system."),(0,o.kt)("li",{parentName:"ul"},"Provision bare-metal nodes using Grendel.")),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"getting-started.drawio",src:r(4400).Z+"#invert-on-dark",width:"732",height:"607"})),(0,o.kt)("p",null,"The Kubernetes Cluster functions as the control plane for managing compute nodes. ",(0,o.kt)("strong",{parentName:"p"},"Therefore, the compute nodes are not considered as part of the Kubernetes Cluster and do not run any Kubernetes workloads.")),(0,o.kt)("p",null,"ClusterFactory is designed to prioritize bare-metal performance and thus leverages Slurm as the bare-metal batch job scheduler."),(0,o.kt)("p",null,"If you intend to run Kubernetes workloads on compute nodes, you may install k0s using k0sctl. However, this approach may not be compatible with the ClusterFactory strategy."))}p.isMDXComponent=!0},4400:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/getting-started.drawio-ad60676bb3d3c24e1ef916ab68b29915.svg"}}]);