"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[4804],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=i,h=d["".concat(o,".").concat(g)]||d[g]||p[g]||s;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9754:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(9496),i=n(5924);const s="tabItem_pxx2";function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(s,a),hidden:n},t)}},6789:(e,t,n)=>{n.d(t,{Z:()=>E});var r=n(665),i=n(9496),s=n(5924),a=n(5734),l=n(732),o=n(3478),c=n(573);function u(e){return function(e){var t;return(null==(t=i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}function p(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,a.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,i.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[a,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[o,u]=g({queryString:n,groupId:r}),[h,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,i.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),y=(()=>{const e=o??h;return d({value:e,tabValues:s})?e:null})();(0,i.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var m=n(1676),y=n(3321);const f="tabList_f5DR",v="tabItem_f81j";function k(e){let{className:t,block:n,selectedValue:a,selectValue:l,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,m.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=o[n].value;r!==a&&(u(t),l(r))},d=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},o.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:p},l,{className:(0,s.Z)("tabs__item",v,null==l?void 0:l.className,{"tabs__item--active":a===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=h(e);return i.createElement("div",{className:(0,s.Z)("tabs-container",f)},i.createElement(k,(0,r.Z)({},e,t)),i.createElement(b,(0,r.Z)({},e,t)))}function E(e){const t=(0,y.Z)();return i.createElement(w,(0,r.Z)({key:String(t)},e))}},8342:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(665),i=(n(9496),n(9613));n(6789),n(9754);const s={},a="GitOps with Grendel",l={unversionedId:"guides/provisioning/gitops-with-grendel",id:"guides/provisioning/gitops-with-grendel",title:"GitOps with Grendel",description:"Postscript strategy",source:"@site/docs/guides/50-provisioning/03-gitops-with-grendel.mdx",sourceDirName:"guides/50-provisioning",slug:"/guides/provisioning/gitops-with-grendel",permalink:"/docs/guides/provisioning/gitops-with-grendel",draft:!1,editUrl:"https://github.com/SquareFactory/ClusterFactory/tree/main/web/docs/guides/50-provisioning/03-gitops-with-grendel.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docs",previous:{title:"Build an OS Image with Packer",permalink:"/docs/guides/provisioning/packer-build"},next:{title:"Deploying SLURM Cluster",permalink:"/docs/guides/slurm/deploy-slurm"}},o={},c=[{value:"Postscript strategy",id:"postscript-strategy",level:2},{value:"GitHub configuration",id:"github-configuration",level:2},{value:"You first postscript tracked with Git",id:"you-first-postscript-tracked-with-git",level:3},{value:"Adding a deploy key",id:"adding-a-deploy-key",level:3},{value:"Grendel configuration",id:"grendel-configuration",level:2},{value:"Private key secret",id:"private-key-secret",level:3},{value:"Mounting the private key",id:"mounting-the-private-key",level:3},{value:"Setup the Grendel postscript for GitOps",id:"setup-the-grendel-postscript-for-gitops",level:3},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gitops-with-grendel"},"GitOps with Grendel"),(0,i.kt)("h2",{id:"postscript-strategy"},"Postscript strategy"),(0,i.kt)("p",null,"If you've looked inside the Packer recipes, you can see that there is a systemd service that will run to fetch the postscript on Grendel:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Extract of ks.bare.cfg"',title:'"Extract',of:!0,'ks.bare.cfg"':!0},'cat << \'END\' >/pull-postscript.sh\n#!/bin/sh\nset -ex\n\nHOSTNAME="$(sed -E \'s/^.*grendel.hostname=([^ ]*).*$/\\1/\' /proc/cmdline)"\nhostnamectl set-hostname "${HOSTNAME}"\n\nGRENDEL_ADDRESS="$(sed -E \'s/^.*grendel.address=([^ ]*).*$/\\1/\' /proc/cmdline)"\n\ncurl -fsSL ${GRENDEL_ADDRESS}/repo/postscript.sh -o /postscript.sh\nchmod +x /postscript.sh\n/postscript.sh ${HOSTNAME}\nEND\n\nchmod +x /pull-postscript.sh\n\ncat <<\'END\' >/etc/systemd/system/grendel-postscript.service\n[Unit]\nDescription=Grendel Postscript\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nExecStart=/pull-postscript.sh\n\n[Install]\nWantedBy=multi-user.target\nEND\nln -s "/etc/systemd/system/grendel-postscript.service" "/etc/systemd/system/multi-user.target.wants/grendel-postscript.service"\n')),(0,i.kt)("p",null,"The postscript is defined inside the Grendel configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="helm/grendel/values-production.yaml"',title:'"helm/grendel/values-production.yaml"'},"config:\n  postscript: ''\n")),(0,i.kt)("p",null,"The strategy to enable GitOps is the following:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The systemd service pull the grendel postscript."),(0,i.kt)("li",{parentName:"ol"},"The grendel postscript fetches the ssh private key from the grendel HTTP server."),(0,i.kt)("li",{parentName:"ol"},"The grendel postscript ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone")," a repository containing other postscripts by using the ssh private key."),(0,i.kt)("li",{parentName:"ol"},"After cloning the repository, grendel executes the postscripts.")),(0,i.kt)("h2",{id:"github-configuration"},"GitHub configuration"),(0,i.kt)("h3",{id:"you-first-postscript-tracked-with-git"},"You first postscript tracked with Git"),(0,i.kt)("p",null,"Create a ",(0,i.kt)("strong",{parentName:"p"},"private")," empty repository for your scripts and add a ",(0,i.kt)("inlineCode",{parentName:"p"},"post.sh")," script."),(0,i.kt)("p",null,"This script is the main entry point. If you want to add a hierarchy, you use this script:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example of postscript"',title:'"Example',of:!0,'postscript"':!0},'#!/bin/sh\n\n# Find all the executable scripts and sort them by name\nscripts=$(find ./scripts -type f | sort)\n\n# Loop through each script and execute it\nfor script in $scripts; do\n  # Check if the script needs to be chmod-ed\n  if [ ! -x "$script" ]; then\n    chmod +x "$script"\n  fi\n\n  # Execute the script\n  "./$script"\ndone\n')),(0,i.kt)("p",null,"This script will execute all the files inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts")," folder in alphabetical order. So you need to create a ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts")," folder with scripts inside."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Commit and push everything.")),(0,i.kt)("h3",{id:"adding-a-deploy-key"},"Adding a deploy key"),(0,i.kt)("p",null,"Generate a key pair using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"ssh-keygen -f $(pwd)/id_rsa -C grendel\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys#set-up-deploy-keys"},"And add the ",(0,i.kt)("inlineCode",{parentName:"a"},"id_rsa.pub")," as a deploy key.")),(0,i.kt)("h2",{id:"grendel-configuration"},"Grendel configuration"),(0,i.kt)("p",null,"Let's add the private key to the Grendel HTTP server."),(0,i.kt)("h3",{id:"private-key-secret"},"Private key secret"),(0,i.kt)("p",null,"Create a secret:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="argo/provisioning/secrets/postscript-privatekey-secret.yaml.local"',title:'"argo/provisioning/secrets/postscript-privatekey-secret.yaml.local"'},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: postscript-privatekey-secret\n  namespace: provisioning\ntype: Opaque\nstringData:\n  ## Create the key with:\n  ## ssh-keygen -f $(pwd)/key -C grendel\n  key: ''\n")),(0,i.kt)("p",null,"Seal it and apply it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="user@local:/ClusterFactory"',title:'"user@local:/ClusterFactory"'},"cfctl kubeseal\nkubectl apply -f argo/provisioning/secrets/postscript-privatekey-sealed-secret.yaml\n")),(0,i.kt)("h3",{id:"mounting-the-private-key"},"Mounting the private key"),(0,i.kt)("p",null,"In the Grendel values file, add:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="helm/grendel/values-production.yaml"',title:'"helm/grendel/values-production.yaml"'},"## Extra volumes\nvolumes:\n  - name: postscript-privatekey\n    secret:\n      defaultMode: 384\n      secretName: postscript-privatekey-secret\n\n## Extra volume mounts\nvolumeMounts:\n  - name: postscript-privatekey\n    subPath: key\n    mountPath: /var/lib/grendel/key\n")),(0,i.kt)("p",null,"This will mount the key inside the HTTP server."),(0,i.kt)("h3",{id:"setup-the-grendel-postscript-for-gitops"},"Setup the Grendel postscript for GitOps"),(0,i.kt)("p",null,"In the Grendel values file, change the ",(0,i.kt)("inlineCode",{parentName:"p"},"postscript")," field to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="helm/grendel/values-production.yaml"',title:'"helm/grendel/values-production.yaml"'},"config:\n  postscript: |\n    #!/bin/sh\n\n    set -ex\n\n    # Fetch deploy key\n    curl --retry 5 -fsSL http://grendel.internal/repo/key -o /key\n    chmod 600 /key\n\n    # Cloning git repo containing postscripts.\n    mkdir -p /configs\n    GIT_SSH_COMMAND='ssh -i /key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' git clone git@github.com:<repo owner>/<repo>.git /configs\n    if [ -f /configs/post.sh ] && [ -x /configs/post.sh ]; then\n      cd /configs || exit 1\n      ./post.sh \"$1\"\n    fi\n    rm -f /key\n\n    # Security\n    chmod -R g-rwx,o-rwx .\n")),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"And that's it! With this, the node postscripts will be tracked on Git and you won't be lost in your node configuration."))}p.isMDXComponent=!0}}]);