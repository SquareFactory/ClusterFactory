"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[206],{9613:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1616:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(2848),o=r(9213),a=(r(9496),r(9613)),i=["components"],l={sidebar_position:1},u="Cluster Factory CE Documentation",c={unversionedId:"intro",id:"intro",title:"Cluster Factory CE Documentation",description:"Cluster Factory CE is an open-source k8s-based infrastructure orchestration tool that automate the process of deploying, managing and monitoring workload-optimized clusters from bare metal servers to VMs and containers.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",next:{title:"1. Requirements and recommendations",permalink:"/docs/getting-started/requirements-recommendations"}},s={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"Community Support",id:"community-support",level:2},{value:"Commercial Support",id:"commercial-support",level:2}],m={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cluster-factory-ce-documentation"},"Cluster Factory CE Documentation"),(0,a.kt)("p",null,"Cluster Factory CE is an open-source k8s-based infrastructure orchestration tool that automate the process of deploying, managing and monitoring workload-optimized clusters from bare metal servers to VMs and containers."),(0,a.kt)("p",null,"Cluster Factory combines all the standard tools of the last 30 years to be able to manage a cluster in a declarative way in combination with the practice of GitOps."),(0,a.kt)("p",null,"This allows to be:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Highly-configurable"),": With Helm, all the configuration goes into a single ",(0,a.kt)("inlineCode",{parentName:"li"},"values.yaml")," file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Repeatable"),": With ArgoCD following the GitOps practices, all the state are specified declaratively and saved in a Git repository."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Highly-available"),": With Kubernetes, the scheduling of the containers is automatically assured"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Simple"),": Only one descriptive YAML per application, and argoCD auto-updates the application.")),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Follow the ",(0,a.kt)("a",{parentName:"p",href:"./getting-stated/initial-configuration"},"next page")," for creating a full Kubernetes cluster."),(0,a.kt)("h2",{id:"community-support"},"Community Support"),(0,a.kt)("p",null,"TODO: discord link"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Community Discord - Request for support and helm from the Cluster Factory community."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/SquareFactory/cluster-factory-ce/issues"},"Github Issues")," - Submit your issues and feature requests via Github.")),(0,a.kt)("p",null,"We welcome your help in building Cluster Factory CE! If you are interested, we invite you to check\nout the ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing"},"Contributing Guide"),"."),(0,a.kt)("h2",{id:"commercial-support"},"Commercial Support"),(0,a.kt)("p",null,"TODO"))}d.isMDXComponent=!0}}]);