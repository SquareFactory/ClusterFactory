"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[2597],{4591:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var n=s(1527),a=s(3883);const c={},o="Claiming a volume",l={id:"guides/storage/claiming-volume",title:"Claiming a volume",description:"What's great with Rook, is that the API integrates very well with Kubernetes.",source:"@site/docs/guides/90-storage/05-claiming-volume.md",sourceDirName:"guides/90-storage",slug:"/guides/storage/claiming-volume",permalink:"/docs/guides/storage/claiming-volume",draft:!1,unlisted:!1,editUrl:"https://github.com/deepsquare-io/ClusterFactory/tree/main/web/docs/guides/90-storage/05-claiming-volume.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docs",previous:{title:"Deploying a Rook Cluster",permalink:"/docs/guides/storage/deploying-rook-cluster"},next:{title:"Deploy a LDAP server",permalink:"/docs/guides/deploy-ldap"}},r={},i=[{value:"Block Storage (RBD)",id:"block-storage-rbd",level:2},{value:"CephFS",id:"cephfs",level:2},{value:"Object storage",id:"object-storage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"claiming-a-volume",children:"Claiming a volume"}),"\n",(0,n.jsx)(t.p,{children:"What's great with Rook, is that the API integrates very well with Kubernetes."}),"\n",(0,n.jsx)(t.h2,{id:"block-storage-rbd",children:"Block Storage (RBD)"}),"\n",(0,n.jsx)(t.p,{children:"If you successfully deployed an RBD pool, the storage class should be present."}),"\n",(0,n.jsxs)(t.p,{children:["Just claim a volume using a ",(0,n.jsx)(t.code,{children:"PersistentVolumeClaim"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: my-data\nspec:\n  storageClassName: ceph-block\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n"})}),"\n",(0,n.jsx)(t.h2,{id:"cephfs",children:"CephFS"}),"\n",(0,n.jsx)(t.p,{children:"If you successfully deployed a CephFS, the storage class should be present."}),"\n",(0,n.jsxs)(t.p,{children:["Just claim a volume using a ",(0,n.jsx)(t.code,{children:"PersistentVolumeClaim"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: my-data\nspec:\n  storageClassName: ceph-filesystem\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n"})}),"\n",(0,n.jsx)(t.h2,{id:"object-storage",children:"Object storage"}),"\n",(0,n.jsx)(t.p,{children:"If you successfully deployed an Object Store, the storage class should be present."}),"\n",(0,n.jsxs)(t.p,{children:["However, unlike the other, you need to claim a volume (bucket) using the ",(0,n.jsx)(t.code,{children:"objectbucket.io/v1alpha1.ObjectBucketClaim"})," CRD:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"apiVersion: objectbucket.io/v1alpha1\nkind: ObjectBucketClaim\nmetadata:\n  name: my-bucket\nspec:\n  generateBucketName: ceph-bkt\n  storageClassName: ceph-bucket\n"})}),"\n",(0,n.jsxs)(t.p,{children:["If you set up the ",(0,n.jsx)(t.code,{children:"ingress"}),", you can access the bucket externally by fetching the values in the Secret, like this:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"echo AWS_HOST=<ingress address>\necho PORT=<ingress port>\necho BUCKET_NAME=$(kubectl -n default get cm my-bucket -o jsonpath='{.data.BUCKET_NAME}')\necho AWS_ACCESS_KEY_ID=$(kubectl -n default get secret my-bucket -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode)\necho AWS_SECRET_ACCESS_KEY=$(kubectl -n default get secret my-bucket -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode)\n\n"})}),"\n",(0,n.jsx)(t.p,{children:"which you can use with S5cmd. For example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"export AWS_HOST=objectstore.ceph-poc.internal\nexport PORT=80\nexport BUCKET_NAME=$(kubectl -n default get cm my-bucket -o jsonpath='{.data.BUCKET_NAME}')\nexport AWS_ACCESS_KEY_ID=$(kubectl -n default get secret my-bucket -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode)\nexport AWS_SECRET_ACCESS_KEY=$(kubectl -n default get secret my-bucket -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode)\n\ns5cmd --endpoint-url http://$AWS_HOST:$PORT cp test s3://\"$BUCKET_NAME\"\ns5cmd --endpoint-url http://$AWS_HOST:$PORT cp s3://\"$BUCKET_NAME\"/test /tmp/test\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3883:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>o});var n=s(959);const a={},c=n.createContext(a);function o(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);