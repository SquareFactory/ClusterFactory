"use strict";(self.webpackChunkcluster_factory_ce_docs=self.webpackChunkcluster_factory_ce_docs||[]).push([[1535],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),d=i,g=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return n?r.createElement(g,a(a({ref:t},u),{},{components:n})):r.createElement(g,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(665),i=(n(9496),n(9613));const o={},a="3. K0s Configuration",l={unversionedId:"getting-started/k0s-configuration",id:"getting-started/k0s-configuration",title:"3. K0s Configuration",description:"Specifying the hosts",source:"@site/docs/getting-started/03-k0s-configuration.md",sourceDirName:"getting-started",slug:"/getting-started/k0s-configuration",permalink:"/docs/getting-started/k0s-configuration",draft:!1,editUrl:"https://github.com/SquareFactory/ClusterFactory/tree/main/web/docs/getting-started/03-k0s-configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docs",previous:{title:"2. Setting up your repository for GitOps",permalink:"/docs/getting-started/setting-up-repository"},next:{title:"4. Core Apps Deployment",permalink:"/docs/getting-started/core-apps-deployment"}},s={},c=[{value:"Specifying the hosts",id:"specifying-the-hosts",level:2},{value:"Configuring the k0s architecture",id:"configuring-the-k0s-architecture",level:2},{value:"Initial Deployment",id:"initial-deployment",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"3-k0s-configuration"},"3. K0s Configuration"),(0,i.kt)("h2",{id:"specifying-the-hosts"},"Specifying the hosts"),(0,i.kt)("p",null,"Edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"cfctl.yaml")," file. Start with the ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts")," field :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=cfctl.yaml",title:"cfctl.yaml"},'apiVersion: cfctl.clusterfactory.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k8s.example.com-cluster\nspec:\n  hosts:\n    - ssh:\n        address: 192.168.0.2\n        user: root\n        port: 22\n        keyPath: ~/.ssh/id_ed25519\n      role: controller+worker\n      noTaints: true\n      privateInterface: eno1\n      privateAddress: 192.168.0.2\n      installFlags:\n        - --debug\n        - --labels="topology.kubernetes.io/region=ch-sion,topology.kubernetes.io/zone=ch-sion-1"\n        - --disable-components coredns\n      hooks:\n        apply:\n          before:\n            # Set SELinux Permissive\n            - sh -c \'if [ "$(getenforce)" != "Permissive" ] && [ "$(getenforce)" != "Disabled" ]; then sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config; fi\'\n            - sh -c \'if [ "$(getenforce)" != "Permissive" ] && [ "$(getenforce)" != "Disabled" ]; then setenforce 0; fi\'\n\n  ...\n')),(0,i.kt)("p",null,"Provide each host with a valid IP address that is reachable by k0ctl, and the connection details for an SSH connection. Edit the labels for multi-zone usage."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/reference/cfctl.yaml"},"See ",(0,i.kt)("inlineCode",{parentName:"a"},"cfctl.yaml")," specification"),"."),(0,i.kt)("h2",{id:"configuring-the-k0s-architecture"},"Configuring the k0s architecture"),(0,i.kt)("p",null,"After you set the ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts")," field, you must configure the k0s architecture by editing the ",(0,i.kt)("inlineCode",{parentName:"p"},"k0s")," field:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="cfctl.yaml > spec > k0s"',title:'"cfctl.yaml',">":!0,spec:!0,'k0s"':!0},"k0s:\n  version: '1.26.0+k0s.0'\n  dynamicConfig: false\n  config:\n    apiVersion: k0s.k0sproject.io/v1beta1\n    kind: Cluster\n    metadata:\n      name: k8s.example.com\n    spec:\n      api:\n        k0sApiPort: 9443\n        port: 6443\n      installConfig:\n        users:\n          etcdUser: etcd\n          kineUser: kube-apiserver\n          konnectivityUser: konnectivity-server\n          kubeAPIserverUser: kube-apiserver\n          kubeSchedulerUser: kube-scheduler\n      konnectivity:\n        adminPort: 8133\n        agentPort: 8132\n      network:\n        calico:\n          mode: 'vxlan'\n          overlay: Always\n          mtu: 0\n          wireguard: false\n        kubeProxy:\n          disabled: false\n          mode: iptables\n        kuberouter:\n          autoMTU: true\n          mtu: 0\n          peerRouterASNs: ''\n          peerRouterIPs: ''\n        podCIDR: 10.244.0.0/16\n        provider: calico\n        serviceCIDR: 10.96.0.0/12\n      podSecurityPolicy:\n        defaultPolicy: 00-k0s-privileged\n      storage:\n        type: etcd\n      telemetry:\n        enabled: false\n")),(0,i.kt)("p",null,"Check the CIDR and make sure it doesn't conflict with any IP range of your network."),(0,i.kt)("p",null,"Again, ",(0,i.kt)("strong",{parentName:"p"},"you should read the specification carefully as the modification of one the k0s field won't be allowed in the future"),"."),(0,i.kt)("p",null,"If you wish to use a HA setup, please follow ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/maintenance/high-availability"},"this guide"),"."),(0,i.kt)("h2",{id:"initial-deployment"},"Initial Deployment"),(0,i.kt)("p",null,"If you forgot to install the utilities, just run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="user@local:/ClusterFactory"',title:'"user@local:/ClusterFactory"'},". ./scripts/setup-env\n")),(0,i.kt)("p",null,"Deploy the cluster with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="user@local:/ClusterFactory"',title:'"user@local:/ClusterFactory"'},"# Deploy the cluster\ncfctl apply --debug --config ./cfctl.yaml\n\n# Fetch the kubeconfig\ncfctl kubeconfig --config ./cfctl.yaml >./kubeconfig\nchmod 600 ./kubeconfig\n")),(0,i.kt)("p",null,"You can store the kubeconfig inside ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.kube/config"),". Our recommendation is to set the ",(0,i.kt)("inlineCode",{parentName:"p"},"KUBECONFIG")," environment variable to avoid mixing the Kubernetes contexts. Just like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="user@local:/ClusterFactory"',title:'"user@local:/ClusterFactory"'},"cfctl kubeconfig --config ./cfctl.yaml >./kubeconfig\nchmod 600 ./kubeconfig\nexport KUBECONFIG=$(pwd)/kubeconfig\n")),(0,i.kt)("p",null,"Just make sure to verify which configuration you are using with ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl config current-context"),". You can add an alias to your favorite shell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'alias kubectx="kubectl config current-context"\n')),(0,i.kt)("p",null,"Congratulation, you have deployed your Kubernetes cluster! However, it's still missing a few core features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MetalLB advertisements, for Load Balancing"),(0,i.kt)("li",{parentName:"ul"},"CoreDNS, which is the internal DNS for Kubernetes"),(0,i.kt)("li",{parentName:"ul"},"KubeVirt, to deploy VM workloads"),(0,i.kt)("li",{parentName:"ul"},"Multus CNI, to support multiple network interfaces"),(0,i.kt)("li",{parentName:"ul"},"Sealed Secrets, secret management optimized for GitOps"),(0,i.kt)("li",{parentName:"ul"},"Cert-manager issuers, to generate your SSL certificates and enable, for free, TLS configuration."),(0,i.kt)("li",{parentName:"ul"},"Argo CD, to enable GitOps."),(0,i.kt)("li",{parentName:"ul"},"Traefik, as an Ingress Controller")))}p.isMDXComponent=!0}}]);