#cloud-config
disable_root: false

ssh_authorized_keys: ${indent(2, yamlencode(ssh_keys))}

vyos_config_commands:
  - set service ssh port 22
  - set interfaces ethernet eth1 address ${addresses}
  - set interfaces ethernet eth1 description 'LAN Private Network'
  - set firewall name OUTSIDE_LOCAL rule 10 action accept
  - set firewall name OUTSIDE_LOCAL rule 10 description 'Allow established/related'
  - set firewall name OUTSIDE_LOCAL rule 10 state established enable
  - set firewall name OUTSIDE_LOCAL rule 10 state related enable
  - set firewall name OUTSIDE_LOCAL rule 20 action accept
  - set firewall name OUTSIDE_LOCAL rule 20 description WireGuard_IN
  - set firewall name OUTSIDE_LOCAL rule 20 log enable
  - set firewall name OUTSIDE_LOCAL rule 20 protocol udp
  - set firewall name OUTSIDE_LOCAL rule 20 source
  - set interfaces ethernet eth0 firewall local name 'OUTSIDE-LOCAL'

  - set protocols bgp system-as '${bgp_asn}'

  %{~ for vpn in wireguard_vpns ~}
  - set interfaces wireguard ${vpn.interface} port '${vpn.port}'
  - set firewall name OUTSIDE_LOCAL rule 20 destination port ${vpn.port}
  - set interfaces wireguard ${vpn.interface} private-key '${vpn.private_key}'
  - set interfaces wireguard ${vpn.interface} address '${vpn.address}'
  - set interfaces wireguard ${vpn.interface} description 'VPN-to-${vpn.peer.name}'
  - set interfaces wireguard ${vpn.interface} peer ${vpn.peer.name} allowed-ips '0.0.0.0/0'
  - set interfaces wireguard ${vpn.interface} peer ${vpn.peer.name} endpoint '${vpn.peer.endpoint}'
  - set interfaces wireguard ${vpn.interface} peer ${vpn.peer.name} public-key '${vpn.peer.public_key}'
  - set interfaces wireguard ${vpn.interface} peer ${vpn.peer.name} preshared-key '${vpn.peer.preshared_key}'

  %{~ for index, prefix in vpn.bgp.exports ~}
  - set policy prefix-list 'BGP-${vpn.peer.name}-OUT' rule ${index} prefix '${prefix}'
  - set policy prefix-list 'BGP-${vpn.peer.name}-OUT' rule ${index} action 'allow'
  %{~ endfor ~}
  - set policy prefix-list 'BGP-${vpn.peer.name}-OUT' rule 1000 prefix '0.0.0.0/0'
  - set policy prefix-list 'BGP-${vpn.peer.name}-OUT' rule 1000 action 'deny'

  - set protocols bgp neighbor ${vpn.bgp.peer.address} remote-as '${vpn.bgp.peer.asn}'
  - set protocols bgp neighbor ${vpn.bgp.peer.address} description  'BGP-with-${vpn.peer.name}'
  - set protocols bgp neighbor ${vpn.bgp.peer.address} address-family ipv4-unicast prefix-list export 'BGP-${vpn.peer.name}-OUT'
  %{~ endfor ~}

  - set vpn ipsec esp-group ESP_DEFAULT compression 'disable'
  - set vpn ipsec esp-group ESP_DEFAULT lifetime '1800'
  - set vpn ipsec esp-group ESP_DEFAULT mode 'tunnel'
  - set vpn ipsec esp-group ESP_DEFAULT pfs 'enable'
  - set vpn ipsec esp-group ESP_DEFAULT proposal 1 encryption 'aes256gcm128'
  - set vpn ipsec esp-group ESP_DEFAULT proposal 1 dh-group 14
  - set vpn ipsec esp-group ESP_DEFAULT proposal 1 hash 'sha512'
  - set vpn ipsec ike-group IKEv2_DEFAULT dead-peer-detection action 'clear'
  - set vpn ipsec ike-group IKEv2_DEFAULT dead-peer-detection interval '30'
  - set vpn ipsec ike-group IKEv2_DEFAULT dead-peer-detection timeout '120'
  - set vpn ipsec ike-group IKEv2_DEFAULT ikev2-reauth 'no'
  - set vpn ipsec ike-group IKEv2_DEFAULT key-exchange 'ikev2'
  - set vpn ipsec ike-group IKEv2_DEFAULT lifetime '10800'
  - set vpn ipsec ike-group IKEv2_DEFAULT proposal 1 encryption 'aes256gcm128'
  - set vpn ipsec ike-group IKEv2_DEFAULT proposal 1 dh-group '14'
  - set vpn ipsec ike-group IKEv2_DEFAULT proposal 1 hash 'sha512'

  %{~ for vpn_index,vpn in ipsec_vpns ~}
  - set interfaces vti vti${vpn_index} address '${vpn.address}'
  - set vpn ipsec interface 'eth0.${vpn_index}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} authentication id '${public_ip}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} authentication mode 'pre-shared-secret'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} authentication pre-shared-secret '${vpn.peer.shared_key}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} authentication remote-id '${vpn.peer.address}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} connection-type 'initiate'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} ike-group 'IKEv2_DEFAULT'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} ikev2-reauth 'inherit'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} local-address '${public_ip}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} vti bind 'vti${vpn_index}'
  - set vpn ipsec site-to-site peer ${vpn.peer.address} vti esp-group 'ESP_DEFAULT'

  %{~ for index, prefix in vpn.bgp.exports ~}
  - set policy prefix-list 'BGP-${vpn.peer.address}-OUT' rule ${index} prefix '${prefix}'
  - set policy prefix-list 'BGP-${vpn.peer.address}-OUT' rule ${index} action 'allow'
  %{~ endfor ~}
  - set policy prefix-list 'BGP-${vpn.peer.address}-OUT' rule 1000 prefix '0.0.0.0/0'
  - set policy prefix-list 'BGP-${vpn.peer.address}-OUT' rule 1000 action 'deny'

  - set protocols bgp neighbor ${vpn.bgp.peer.address} remote-as '${vpn.bgp.peer.asn}'
  - set protocols bgp neighbor ${vpn.bgp.peer.address} description 'BGP-with-${vpn.peer.address}'
  - set protocols bgp neighbor ${vpn.bgp.peer.address} address-family ipv4-unicast prefix-list export 'BGP-${vpn.peer.address}-OUT'
  %{~ endfor ~}
