apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "openldap.name" . }}"
  namespace: '{{ .Release.Namespace }}'
  labels:
    release: '{{ .Release.Name }}'
    chart: '{{ .Chart.Name }}'
    app: "{{ template "openldap.name" . }}"
spec:
  serviceName: "{{ template "openldap.name" . }}"
  selector:
    matchLabels:
      app: "{{ template "openldap.name" . }}"
      app.kubernetes.io/name: "{{ template "openldap.name" . }}"
      app.kubernetes.io/instance: "{{ template "openldap.name" . }}"
  replicas: {{ .Values.replicas }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | trim | indent 4 }}
  template:
    metadata:
      name: "{{ template "openldap.name" . }}"
      labels:
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}"
        app: "{{ template "openldap.name" . }}"
        app.kubernetes.io/name: "{{ template "openldap.name" . }}"
        app.kubernetes.io/instance: "{{ template "openldap.name" . }}"
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 8 }}
{{- end }}
{{- if .Values.annotations }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeAffinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: "{{ .Values.dnsPolicy }}"
      {{- end }}
      {{- if .Values.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      {{- end }}
      containers:
        - name: "{{ template "openldap.name" . }}"
          image: "{{ .Values.image }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: ldap
              containerPort: {{ .Values.ldapPort }}
            {{- if .Values.tls.enabled }}
            - name: ldaps
              containerPort: {{ .Values.ldapsPort }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: "{{ template "openldap.name" . }}-env"
            {{- if .Values.envSecretName }}
            - secretRef:
                name: "{{ .Values.envSecretName }}"
            {{- end }}
          env:
            - name: LDAP_PORT_NUMBER
              value: "{{ .Values.ldapPort }}"
            - name: LDAP_ENABLE_TLS
              value: {{ quote .Values.tls.enabled }}
            {{- if .Values.tls.enabled }}
            - name: LDAP_LDAPS_PORT_NUMBER
              value: "{{ .Values.ldapsPort }}"
            - name: LDAP_TLS_CERT_FILE
              value: "/opt/bitnami/openldap/certs/tls.crt"
            - name: LDAP_TLS_KEY_FILE
              value: "/opt/bitnami/openldap/certs/tls.key"
            - name: LDAP_TLS_CA_FILE
              value: "/opt/bitnami/openldap/certs/ca.crt"
            {{- end }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "ldapsearch -H ldap://127.0.0.1:{{ .Values.ldapPort }} -D cn=admin,${LDAP_ROOT} -b ${LDAP_ROOT} -w ${LDAP_ADMIN_PASSWORD}"
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
            tcpSocket:
              port: ldap
{{ toYaml .Values.readinessProbe | indent 12 }}
          volumeMounts:
            - name: openldap-data
              mountPath: /bitnami/openldap/
            {{- if .Values.tls.enabled }}
            - name: openldap-certs
              mountPath: /opt/bitnami/openldap/certs/
            {{- end }}
            {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        {{- if .Values.tls.enabled }}
        - name: openldap-certs
          secret:
            secretName:  "{{ .Values.tls.secretName }}"
            defaultMode: 256
        {{- end }}
        {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: openldap-data
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: "{{ .Values.persistence.storageClassName }}"
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- with .Values.persistence.selectorLabels }}
        selector:
          matchLabels:
{{ toYaml . | indent 12 }}
        {{- end }}
