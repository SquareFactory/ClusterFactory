{{- range $repository := .Values.repositories }}
---
apiVersion: v1
kind: List
metadata:
  name: 'cvmfs-{{ $repository.name }}-list'
  namespace: '{{ $.Release.Namespace }}'
items:
  - apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: 'cvmfs-{{ $repository.name }}'
    # Local storage does not need a provisioner
    provisioner: kubernetes.io/no-provisioner
    # Give it out as-is
    reclaimPolicy: Retain
    volumeBindingMode: Immediate
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: 'cvmfs-{{ $repository.name }}'
    spec:
      capacity:
        storage: 4Gi
      volumeMode: Filesystem
      accessModes:
        - ReadOnlyMany
      persistentVolumeReclaimPolicy: Retain
      storageClassName: 'cvmfs-{{ $repository.name }}'
      local:
        path: '/cvmfs/cvmfs-k8s/mounts/{{ $repository.repository }}'
      nodeAffinity:
        required:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: NotIn
                  values:
                    - fake
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: 'cvmfs-{{ $repository.name }}'
    spec:
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 4Gi
      storageClassName: 'cvmfs-{{ $repository.name }}'
{{- end }}
