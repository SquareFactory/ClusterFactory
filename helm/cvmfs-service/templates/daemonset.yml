apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ template "cvmfs-service.name" . }}"
  namespace: '{{ .Release.Namespace }}'
  labels:
    release: '{{ .Release.Name }}'
    chart: '{{ .Chart.Name }}'
    app: "{{ template "cvmfs-service.name" . }}"
spec:
  selector:
    matchLabels:
      app: "{{ template "cvmfs-service.name" . }}"
  template:
    metadata:
      labels:
        app: "{{ template "cvmfs-service.name" . }}"
    spec:
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeAffinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.keys.secretName }}
      initContainers:
        - name: prepare-keys
          image: "{{ .Values.image }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          command: ["sh", "-c"]
          args:
            - |-
              cp -Rp /etc/cvmfs/keys/ /out/;
              cp -Rp /in/ /out/;
              find /out -type f -exec chmod 400 {} \;;
          volumeMounts:
            - name: cvmfs-keys
              mountPath: /in
            - name: all-cvmfs-keys
              mountPath: /out
      {{- end }}
      containers:
        - name: "{{ template "cvmfs-service.name" . }}"
          image: "{{ .Values.image }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          command:
            - sh
            - -c
            - >-
              sed -Ei 's/CVMFS_REPOSITORIES="cvmfs-config.cern.ch,/CVMFS_REPOSITORIES="/g' /usr/bin/mount_cvmfs.sh;
              /usr/bin/mount_cvmfs.sh
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          volumeMounts:
            - name: fuse-device
              mountPath: /dev/fuse
            - name: cvmfs-noderoot
              mountPath: /var/lib/cvmfs
              subPath: cvmfs-k8s/cache
            - name: cvmfs-noderoot
              mountPath: /cvmfs
              subPath: cvmfs-k8s/mounts
              # Make cvmfs fuse mounts visible on the node
              mountPropagation: Bidirectional
            {{- range $key, $entry := .Values.configs }}
            - name: cvmfs-config
              mountPath: "/etc/cvmfs/{{ $entry.mountPath }}"
              subPath: {{ $key }}
            {{- end }}
            {{- if .Values.keys.secretName }}
            - name: all-cvmfs-keys
              mountPath: "/etc/cvmfs/keys"
            {{- end }}
          readinessProbe:
            exec:
              command: ["/usr/bin/check_cvmfs.sh", "readiness"]
{{ toYaml .Values.readinessProbe | indent 12 }}
          livenessProbe:
            exec:
              command: ["/usr/bin/check_cvmfs.sh", "liveness"]
{{ toYaml .Values.livenessProbe | indent 12 }}
          lifecycle:
            preStop:
              exec:
                # Properly unmount the /cvmfs-k8s/mounts area, i.e.
                # avoid "transport endpoint not connected"
                command: ["/usr/bin/terminate.sh"]
          env:
            - name: CVMFS_CLIENT_PROFILE
              value: single
            - name: CVMFS_REPOSITORIES
              value: "{{ template "cvmfs-service.repositoriesList" . }}"
            - name: CVMFS_HTTP_PROXY
              value: "{{ .Values.proxy }}"
      terminationGracePeriodSeconds: 30
      volumes:
        - name: cvmfs-noderoot
          persistentVolumeClaim:
            claimName: "{{ template "cvmfs-service.name" . }}-noderoot"
        - name: fuse-device
          hostPath:
            path: /dev/fuse
            type: CharDevice
        - name: cvmfs-cache
          emptyDir: {}
        - name: all-cvmfs-keys
          emptyDir: {}
        - name: cvmfs-config
          configMap:
            name: "{{ template "cvmfs-service.name" . }}-config"
        {{- if .Values.keys.secretName }}
        - name: cvmfs-keys
          secret:
            secretName: "{{ .Values.keys.secretName }}"
            {{- with .Values.keys.items }}
            items:
{{ toYaml . | indent 14}}
            {{- end }}
        {{- end }}
