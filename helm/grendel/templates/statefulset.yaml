apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "grendel.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    release: {{ .Release.Name | quote }}
    chart:  {{ .Chart.Name }}
spec:
  serviceName: {{ template "grendel.name" .}}
  selector:
    matchLabels:
      app: "{{ template "grendel.name" . }}"
  replicas: {{ .Values.replicas }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      name: "{{ template "grendel.name" . }}"
      labels:
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}"
        app: "{{ template "grendel.name" . }}"
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        v1.multus-cni.io/default-network: "{{ .Release.Namespace }}/{{ template "grendel.name" . }}-net"
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- with .Values.net.dns }}
      dnsPolicy: "None"
      dnsConfig:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeAffinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: "{{ template "grendel.name" . }}"
          args:
            - '--debug'
            - '--verbose'
            - 'serve'
            - '-c'
            - '/secret/grendel.toml'
            - '--hosts'
            - '/config/hosts.json'
            - '--images'
            - '/config/images.json'
            - '--listen'
            - '0.0.0.0'
          securityContext:
{{ toYaml .Values.securityContext | indent 12}}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dhcp-udp
              containerPort: 67
              protocol: UDP
            - name: dhcp-tcp
              containerPort: 67
              protocol: TCP
            - name: tftp-udp
              containerPort: 69
              protocol: UDP
            - name: tftp-tcp
              containerPort: 69
              protocol: TCP
            - name: http-udp
              containerPort: 80
              protocol: UDP
            - name: http-tcp
              containerPort: 80
              protocol: TCP
            - name: pxe
              containerPort: 4011
              protocol: TCP
          volumeMounts:
            - name: grendeldata
              subPath: repo
              mountPath: /var/lib/grendel
            - name: grendel-run
              mountPath: /var/run/grendel
            - name: grendel-config
              subPath: postscript.sh
              mountPath: /var/lib/grendel/postscript.sh
            - name: grendel-secret
              mountPath: /secret
            - name: grendel-config
              mountPath: /config
            {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: filebrowser
          image: filebrowser/filebrowser:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 256Mi
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: FB_NOAUTH
              value: "true"
            - name: FB_DATABASE
              value: "/database/filebrowser.db"
            - name: FB_LOG
              value: "stdout"
            - name: FB_BASEURL
              value: ""
            - name: FB_ADDRESS
              value: ""
            - name: FB_PORT
              value: "8080"
            - name: FB_ROOT
              value: /srv
          volumeMounts:
            - name: grendeldata
              subPath: repo
              mountPath: /srv
            - name: grendeldata
              subPath: filebrowser-db
              mountPath: /database

      volumes:
        - name: grendel-secret
          secret:
            defaultMode: 384
            secretName: {{ .Values.config.secretName }}
            items:
              - key: {{ .Values.config.secretKey }}
                path: grendel.toml
        - name: grendel-run
          emptyDir: {}
        - name: grendel-config
          configMap:
            name: {{ template "grendel.name" . }}-config
        {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: grendeldata
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
