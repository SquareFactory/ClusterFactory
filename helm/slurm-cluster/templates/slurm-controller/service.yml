apiVersion: v1
kind: Service
metadata:
  name: "{{ template "slurm-cluster.controller.name" . }}"
  namespace: '{{ .Release.Namespace }}'
  labels:
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}"
    app: "{{ template "slurm-cluster.controller.name" . }}"
    app.kubernetes.io/name: "{{ template "slurm-cluster.controller.name" . }}"
    app.kubernetes.io/instance: "{{ template "slurm-cluster.controller.name" . }}"
    app.kubernetes.io/component: controller
{{- if .Values.controller.service.labels }}
{{ toYaml .Values.controller.service.labels | indent 4 }}
{{- end }}
{{- if .Values.controller.service.annotations }}
  annotations:
{{ toYaml .Values.controller.service.annotations | indent 4 }}
{{- end }}
spec:
{{- if .Values.controller.service.clusterIP }}
  clusterIP: {{ .Values.controller.service.clusterIP }}
{{- end }}
{{- if .Values.controller.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.controller.service.externalIPs | indent 4 }}
{{- end }}
{{- if .Values.controller.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.controller.service.loadBalancerIP }}
{{- end }}
{{- if .Values.controller.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{- range $cidr := .Values.controller.service.loadBalancerSourceRanges }}
    - {{ $cidr }}
  {{- end }}
{{- end }}
{{- if ne .Values.controller.service.type "ClusterIP" }}
  externalTrafficPolicy: {{ .Values.controller.service.externalTrafficPolicy }}
{{- end }}
  ports:
    - name: slurmctld
      {{- if eq .Values.controller.service.type "NodePort" }}
      nodePort: {{ .Values.controller.service.nodePort }}
      {{- end }}
      port: {{ .Values.controller.service.port }}
      targetPort: slurmctld
{{- if .Values.controller.service.additionalPorts }}
{{ toYaml .Values.controller.service.additionalPorts | indent 4 }}
{{- end }}
  selector:
    app.kubernetes.io/name: "{{ template "slurm-cluster.controller.name" . }}"
    app.kubernetes.io/instance: "{{ template "slurm-cluster.controller.name" . }}"
    app.kubernetes.io/component: controller
{{- if .Values.controller.service.sessionAffinity }}
  sessionAffinity: {{ .Values.controller.service.sessionAffinity }}
{{- end }}
  type: "{{ .Values.controller.service.type }}"
