#!/bin/sh -eux

set -eux

if [ $UID -ne 0 ]; then
  echo "ERROR: Must be run as root!" >&2
  exit 1
fi

TMP_DIR=$(mktemp -d /tmp/packer-XXXX)

clean() {
  echo 'Unmounting image...'
  if [ "$TMP_DIR" = "" ]; then
    exit 1
  fi
  umount -f "$TMP_DIR/dev"
  umount -f "$TMP_DIR/proc"
  umount -f "$TMP_DIR/sys"
  umount -f "$TMP_DIR"
  rmdir --ignore-fail-on-non-empty "$TMP_DIR"
}

trap clean EXIT

echo 'Mounting root partition...'
mount "${NBD}p1" "$TMP_DIR"
mount --bind /dev "$TMP_DIR/dev"
mount --bind /proc "$TMP_DIR/proc"
mount --bind /sys "$TMP_DIR/sys"

chroot "$TMP_DIR" /bin/bash -c '
for kv in /lib/modules/*; do
  kver=$(basename "${kv}")

  dracut -v \
    --no-hostonly \
    --add "base dmsquash-live livenet kernel-modules" \
    --force "/tmp/initramfs-5.14.0-284.30.1.el9_2.x86_64.img" \
    "5.14.0-284.30.1.el9_2.x86_64"
done
'

mkdir -p ./output-boot/
find "$TMP_DIR/boot/" -name "vmlinuz-*" -type f -exec cp {} ./output-boot/ \;
find "$TMP_DIR/tmp/" -name "initramfs-*" -type f -exec mv {} ./output-boot/ \;
